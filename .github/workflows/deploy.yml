name: Deploy

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    #  - auto_test/**
      - graph_network/**
      - answers_auto_test/**
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh/ ;
        echo "$DEPLOY_SSH_PRIVATE_KEY" > ~/.ssh/deploy_key ;
        chmod 600 ~/.ssh/deploy_key ;
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts ;
      shell: bash
      env:
        DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

    - name: Deploy to server
      run: |
        ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} "mkdir -p /app/trunk.new" 
        scp -i ~/.ssh/deploy_key -r ./* ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }}:/app/trunk.new
        ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} "
          rm -r /app/trunk.old
          mv /app/trunk /app/trunk.old && 
          mv /app/trunk.new /app/trunk &&
          cd /app/trunk"
        ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} 'printf "${{ secrets.MATOMO_ENV }}" > /app/trunk/.env'
        ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} "cd /app/trunk && ls -lah"
      shell: bash
      env:
        DEPLOY_IP: ${{ secrets.DEPLOY_IP }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        MATOMO_ENV: ${{ secrets.MATOMO_ENV }}
    - name: Run docker
      run: |
        ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} "
        cd /app/trunk &&
        docker container prune -f &&
        docker compose build &&
        docker compose down &&
        docker compose up -d;
        "
      shell: bash
      env:
        DEPLOY_IP: ${{ secrets.DEPLOY_IP }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
    - name: Validate deployment of llm-service
      working-directory: ./auto_test
      env:
        HTTP_AUTHORIZATION: ${{ secrets.HTTP_AUTHORIZATION }}
      run: |
        pip install requests &&
        python ci-test.py 
